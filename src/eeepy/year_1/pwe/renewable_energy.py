#!/usr/bin/env python3
# Renewable Energy
# Wind Turbine
def power_wind(A: float, V: float, row: float = rowAir) -> float:
    """
    Calculates the power in the wind
    """
    return row * A * V**3 / 2


def power_wind_turbine(A: float, V: float, Cp: float = Cpmax,
                       row: float = rowAir) -> float:
    """
    Calculates the power generated by a wind turbine
    """
    return Cp * row * A * V**3 / 2


def power_wind_turbine_power(Pw: float, Cp: float = Cpmax,
                             row: float = rowAir) -> float:
    """
    Calculates the power generated by a wind turbine
    """
    return Cp * Pw


def wind_total_efficiency(etaGen: float, etaConv: float,
                          Cp: float = Cpmax) -> float:
    """
    Calculate the total efficiency of a wind turbine
    """
    return Cp * etaGen * etaConv


def TSR(omega: float, R: float, V: float) -> float:
    """
    Calculate the tip speed ratio (TSR/É·) of a wind turbine
    """
    return omega * R / V


def tip_speed(r: float, rpm: float = 0, omega: float = 0) -> float:
    """
    Calculate the tip speed of the wind turbine
    """
    circumference = 2 * pi * r
    omega = rad_per_sec(rpm, omega)
    return omega * circumference


def capacity_factor(Pgen: float, Pmax: float) -> float:
    """
    Calculates the capacity factor of a wind turbine
    """
    return Pgen / Pmax


def power_coefficient(Pturbine: float, Pwind: float) -> float:
    """
    Calculates the power coefficient of a wind turbine
    """
    return Pturbine / Pwind


# Solar
def power_sun(A: float, E: float) -> float:
    """
    Calculates the energy recived in an area from the sun
    """
    return E * A


def power_PV(E: float, A: float, eta: float) -> float:
    """
    Calculates the power generated by a photovoltaic cell
    """
    return E * A * eta


def power_PV_power(Pin: float, eta: float) -> float:
    """
    Calculates the power generated by a photovoltaic cell
    """
    return Pin * eta
